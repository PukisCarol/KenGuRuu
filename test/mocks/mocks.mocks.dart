// Mocks generated by Mockito 5.4.5 from annotations
// in kenguruu/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:kenguruu/logic/ToDoListLogic.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ToDoController].
///
/// See the documentation for Mockito's code generation for more information.
class MockToDoController extends _i1.Mock implements _i2.ToDoController {
  MockToDoController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<List<dynamic>> get toDoList =>
      (super.noSuchMethod(
            Invocation.getter(#toDoList),
            returnValue: <List<dynamic>>[],
          )
          as List<List<dynamic>>);

  @override
  set toDoList(List<List<dynamic>>? value) => super.noSuchMethod(
    Invocation.setter(#toDoList, value),
    returnValueForMissingStub: null,
  );

  @override
  void addTask(String? taskName) => super.noSuchMethod(
    Invocation.method(#addTask, [taskName]),
    returnValueForMissingStub: null,
  );

  @override
  void deleteTask(int? index) => super.noSuchMethod(
    Invocation.method(#deleteTask, [index]),
    returnValueForMissingStub: null,
  );

  @override
  void toggleTaskCompletion(int? index) => super.noSuchMethod(
    Invocation.method(#toggleTaskCompletion, [index]),
    returnValueForMissingStub: null,
  );

  @override
  void editTask(int? index, String? newTaskName) => super.noSuchMethod(
    Invocation.method(#editTask, [index, newTaskName]),
    returnValueForMissingStub: null,
  );
}
